{"version":3,"sources":["components/PhoneCatalog.js","components/PhoneViewer.js","components/ShoppingCart.js","components/FilterPhones.js","components/SortPhones.js","App.js","serviceWorker.js","index.js"],"names":["PhoneCatalog","_ref","phones","click","addPhone","react_default","a","createElement","className","map","phone","index","data-phone-id","id","data-element","key","href","alt","name","src","imageUrl","onClick","snippet","PhoneViewer","_this$props","this","props","backToCatalog","selected","phonePage","filter","data-back-button","React","Component","ShoppingCart","selectedPhones","removePhone","arrPhones","Object","entries","Fragment","_renderList","FilterPhones","search","onChange","SortPhones","sort","event","value","PhoneApp","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","url","state","phoneViewerHide","pagePhone","functions","arrayFunctions","clickedPhone","func","bind","assertThisInitialized","forEach","propName","slice","length","setState","copySelectedPhones","objectSpread","keys","includes","countMinus","k","filteredPhones","toConsumableArray","toLowerCase","target","getPhones","sortedPhonesByOrder","order","phoneA","phoneB","phoneAname","phoneBname","age","fetch","response","json","component","components_PhoneCatalog","goToViewer","components_PhoneViewer","components_FilterPhones","components_SortPhones","components_ShoppingCart","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.532aa166.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction PhoneCatalog( {phones, click , addPhone} ){\r\n        return(\r\n            <ul className=\"phones\">\r\n                {phones.map((phone, index)=>{\r\n                    return <li\r\n                        className=\"thumbnail\"\r\n                        data-phone-id={phone.id}\r\n                        data-element=\"phone-element\"\r\n                        key={\"data-\"+phone.id}\r\n                    >\r\n                        <a\r\n                            href={\"#!/phones/motorola-xoom-with-wi-fi\"}\r\n                            className=\"thumb\"\r\n                            data-element=\"details-link\"\r\n                        >\r\n                        <img\r\n                            alt={phone.name+\"â„¢ with Wi-Fi\"}\r\n                            src={'./'+phone.imageUrl}\r\n                            onClick={()=>click(phone.id)}/>\r\n                        </a>\r\n\r\n                        <div className=\"phones__btn-buy-wrapper\">\r\n                            <a  href={'#!/phones/motorola-xoom-with-wi-fi'}\r\n                                className={\"btn btn-success\"}\r\n                                data-element={\"add-to-cart\"}\r\n                                onClick={()=>addPhone(phone.id)}\r\n                            >\r\n                                Add\r\n                            </a>\r\n                        </div>\r\n\r\n                        <a\r\n                            href={\"#!/phones/motorola-xoom-with-wi-fi\"}\r\n                            data-element=\"details-link\"\r\n                            onClick={()=>click(phone.id)}\r\n                        >{phone.name}\r\n                        </a>\r\n                        <p>{phone.snippet}</p>\r\n                    </li>\r\n                })}\r\n            </ul>\r\n            )\r\n    }\r\n\r\nexport default PhoneCatalog;","import React from 'react';\r\n\r\nclass PhoneViewer extends React.Component{\r\n    render(){\r\n        const {backToCatalog, addPhone, selected, phones} = this.props;\r\n        const phonePage = phones.filter((phone)=>phone['id']===selected);\r\n\r\n        return(\r\n            <div>\r\n                <img\r\n                    data-element=\"large-image\"\r\n                    className=\"phone\"\r\n                    src={phonePage[0]['imageUrl']}\r\n                    alt={\"img\"}\r\n                />\r\n                    <button\r\n                        data-back-button=\"backToCatalog\"\r\n                        onClick={backToCatalog}\r\n                    >\r\n                        Back\r\n                    </button>\r\n                    <button\r\n                        data-element={\"add-to-cart-view\"}\r\n                        onClick={()=>addPhone(selected)}\r\n                    >Add to basket\r\n                    </button>\r\n\r\n                <h1>{}</h1>\r\n\r\n                <p>{}</p>\r\n\r\n                <ul className=\"phone-thumbs\">\r\n                    {/*${this._phoneDetails.images.map((imageUrl) => {*/}\r\n                    {/*return `<li>*/}\r\n            {/*<img*/}\r\n            {/*data-element=\"small-image\"*/}\r\n            {/*src=\"${imageUrl}\"*/}\r\n             {/*></li>`*/}\r\n                {/*}).join('')}*/}\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PhoneViewer;","import React from 'react';\r\n\r\nclass ShoppingCart extends React.Component{\r\n\r\n    render(){\r\n        const {selectedPhones, removePhone} = this.props;\r\n        const arrPhones = Object.entries(selectedPhones);\r\n        return(\r\n            <>\r\n            <p>Shopping Cart:</p>\r\n            <ul\r\n            data-element=\"add-phones\"\r\n            >\r\n                { this._renderList(arrPhones, removePhone )}\r\n\r\n            </ul>\r\n            </>\r\n    )\r\n    }\r\n\r\n    _renderList(arrPhones, removePhone){\r\n       return arrPhones.map((phone, index)=>{\r\n            return <li\r\n                 key={'add-phone'+index}\r\n            >\r\n                <button onClick={()=>removePhone(phone[0])}>x</button>\r\n                {phone[0]}: {phone[1]}\r\n                </li>\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ShoppingCart;","import React from 'react';\r\n\r\nfunction FilterPhones ({search}){\r\n\r\n     return(\r\n         <p>\r\n             Search:\r\n             <input onChange={search}/>\r\n         </p>\r\n     )\r\n}\r\n\r\nexport default FilterPhones;","import React from 'react';\r\n\r\nfunction SortPhones({sort}){\r\n        return(\r\n            <p>\r\n                Sort by:\r\n                <select onChange={(event)=>sort(event)}>\r\n                    <option value=\"age\">Newest</option>\r\n                    <option value=\"name\">Alphabetical</option>\r\n                </select>\r\n            </p>\r\n        )\r\n    }\r\n\r\nexport default SortPhones;","import React from 'react';\nimport PhoneCatalog from './components/PhoneCatalog';\nimport PhoneViewer from './components/PhoneViewer'\nimport ShoppingCart from './components/ShoppingCart'\nimport FilterPhones from './components/FilterPhones'\nimport SortPhones from './components/SortPhones'\n\n\nimport './App.css';\n\nclass PhoneApp extends React.Component{\n\n  constructor(){\n    super();\n    this.url = 'https://mate-academy.github.io/phone-catalogue-static/api/';\n    this.state = {\n         phones : [],\n         phoneViewerHide: true,\n         pagePhone:'',\n         selectedPhones:{}\n    };\n\n    this.functions = {};\n    this.arrayFunctions = [\n        this.clickedPhone,\n        this.backToCatalog,\n        this.addPhone,\n        this.removePhone,\n        this.filter,\n        this.sort\n    ].map((func)=>{\n        return func.bind(this)\n    });\n    this.arrayFunctions.forEach((func)=>{\n         const propName = func.name.slice(6, func.name.length);\n         return this.functions[propName] = func;\n     });\n\n  }\n    clickedPhone(id){\n        this.setState({\n            phoneViewerHide: false,\n            pagePhone: id\n        });\n    }\n\n    backToCatalog(){\n        this.setState({\n            phoneViewerHide: true\n        })\n    }\n\n    addPhone(id){\n      const copySelectedPhones ={...this.state.selectedPhones},\n      keys = Object.keys(copySelectedPhones);\n\n      if(keys.includes(id)){\n          copySelectedPhones[id]++;\n      }else {\n          copySelectedPhones[id]=1;\n      }\n      this.setState({\n            selectedPhones: copySelectedPhones,\n        });\n\n      }\n\n    removePhone(id){\n        const countMinus = {...this.state.selectedPhones};\n\n        for(let k in countMinus){\n            if(id === k){\n                countMinus[k] = countMinus[k]-1;\n            }\n        }\n\n        if(countMinus[id]<1){\n            delete countMinus[id];\n            this.setState({selectedPhones: countMinus});\n        }\n        this.setState({selectedPhones: countMinus});\n    }\n\n     filter(event){\n         const phones = [...this.state.phones],\n         filteredPhones = phones.filter((phone)=>{\n                 return phone.id.toLowerCase().includes(event.target.value.toLowerCase())\n         });\n\n         if(event.target.value===''){\n             this.getPhones();\n\n         }else{\n             this.setState({\n                 phones: filteredPhones\n             })\n         }\n     }\n\n  sort(event){\n       const order = event.target.value,\n             phones = [...this.state.phones];\n\n       let sortedPhonesByOrder;\n\n      function compareString(phoneA, phoneB){\n          const phoneAname = phoneA.name.toLowerCase(),\n              phoneBname = phoneB.name.toLowerCase();\n          if(phoneAname<phoneBname){\n              return -1;\n          }\n          if(phoneAname>phoneBname){\n              return 1;\n          }\n          return 0;\n      }\n\n      function compareNumber(phoneA, phoneB){\n          return phoneA.age - phoneB.age\n      }\n\n      if(order ==='name'){\n         sortedPhonesByOrder = phones.sort(compareString);\n       }\n      if(order ==='age'){\n          sortedPhonesByOrder = phones.sort(compareNumber);\n      }\n\n      this.setState({phones: sortedPhonesByOrder})\n  }\n\n  async getPhones(){\n      const response = await fetch(this.url + 'phones.json');\n      const json = await response.json();\n      this.setState({phones: json});\n  }\n\n   componentDidMount() {\n        this.getPhones()\n    }\n\n  render(){\n\n\n\n      let component = <PhoneCatalog\n          click={this.functions['clickedPhone']}\n          addPhone ={this.functions['addPhone']}\n          goToViewer = {this.functions['goToPagePhone']}\n          phones = {this.state.phones}\n      />;\n\n      if(!this.state.phoneViewerHide) {\n          component = <PhoneViewer\n          backToCatalog={this.functions['backToCatalog']}\n          addPhone ={this.functions['addPhone']}\n          selected ={this.state.pagePhone}\n          phones = {this.state.phones}\n           />\n      }\n\n      return (\n          <div className=\"App\">\n              <div className=\"row\">\n                  <div className=\"col-md-2\">\n                      <section>\n                          <FilterPhones search={this.functions['filter']}/>\n                          <SortPhones sort={this.functions['sort']}/>\n                      </section>\n\n                      <section>\n                       <ShoppingCart\n                           selectedPhones={this.state.selectedPhones}\n                           removePhone ={this.functions['removePhone']}\n                       />\n                      </section>\n                  </div>\n                  <div className=\"col-md-10\"\n                  >\n                      { component }\n                  </div>\n              </div>\n          </div>\n      );\n  }\n}\n\nexport default PhoneApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PhoneApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<PhoneApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}